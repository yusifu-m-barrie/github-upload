<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7jqpdg0QmkKWiaQkDyOiScuqEP/Z
</value>
  </data>
</root>